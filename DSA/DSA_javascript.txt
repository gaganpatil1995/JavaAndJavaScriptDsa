check(lower(email)=email)

@@@@@  1) maximum occuring element

--------------------------------------------------------------------------------------------

@@@@@  2) count the no of element and place in key object

----------------------------------------------------------------------------------------------

@@@@@  3) An anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once. For example, the word anagram can be rearranged into nag a ram.

Given 2 phrases, write a program that detects if both are anagrams of each other.

If both are anagrams, print "True"

Else print "False"

-------------------------------------------------------------------------------------------------------------------------
@@@@@  4)Given a string s of length n, find out if it's possible to make it palindrome by rearranging their characters.

Print "Yes" if it is possible else "No" (without quotes).
--------------------------------------------------------------------------------------------------------------
@@@@@  5)-You are provided with N names, your task is to write a code that prints the name along with the number of times it is presently separated by space.
------------------------------------------------------------------------
@@@@@  6) You have given an array of size N and an integer M.

Your task is to calculate the difference between maximum sum and minimum sum of N-M elements of the given array.
--------------------------------------------------------------------------------------------------------------
@@@@@  7)  You are given some matrices consist of only 0 's and 1's and you have to pick which are symmetric and which are not

A matrix is said to be symmetric about X- axis if 1st row is identical to n-th row, 2nd is identical to (n-1)th row and so on.

A matrix is said to be symmetric about Y- axis if 1st column is identical to the nth column, 2nd identical to (n-1)th and so on for all columns.

Your task is to print "YES" if it is symmetric about X-axis and Y-axis else "NO"
----------------------------------------------------------------------------------------------------------------------------------------------
@@@@@  8)You are given a matrix of size N x M.

Print the spiral traversal of the matrix.

Refer the image given below, for better understanding.

Screenshot (116).png
-------------------------------------------------------------------------------------------------------------------------------------------------
@@@@@  9)Masai School is organizing a quiz competition, but it wants only those people to participate, who are willing. Therefore, it is not mandatory to participate for everyone

Also, students can form groups of any sizes to participate in the competition.

All the students are standing in a queue, and are holding cards with values on them either 0 or 1. 1 indicates a student is participating, while 0 indicates that a student is not participating. All the students that are standing together, and are participating, that means holding a card with a value 1, are in the same team.

You have to find the number of groups participating in the quiz

Note: It is possible that all the students fall in one single group


@@@@@  10) Product Of Array 

Given a array of N 32 bit integers. You need to find product of array for each i without considering ith element. where 0 <= i <= n-1 . See sample test case for better understanding.

You are not allowed to use division operator. It is given that product will fit in 32 bit integer

@@@@@  11) Smaller Neighbour Element Ended
Description

Given an array, find the nearest smaller element G[i] for every element A[i] in the array such that the element has an index smaller than i.

Mathematically,

G[i] for an element A[i] is an element A[j] such that

j is maximum possible AND

j < i AND

A[j] < A[i]

Note: Elements for which no smaller element exist, consider next smaller element as -1.


@@@@@  12) Unique Gift Ended

You are visiting a friend at her housewarming party. When you arrive at her house, you see a queue of people standing outside waiting to go inside. Everybody is holding a present in their hands, and since there aren't many gift shops nearby, most of them end up buying the same gift for her. As more and more people keep joining the queue, you are curious to find the first unique gift in the line. You sit and examine the row after a new person arrives; when he does, you examine the queue from front to back to find out which is the first different gift and add it to your list.

Note-If after a new person arrives no gift is unique in the queue add '#' to the output


@@@@@  13)GP & Recursion 


Now that you have learnt about geometric progression in Masai School pre-course, we hope you remember about the sum of a geometric series:

Assume, you are given

S = 1 + (1/r) + (1/r^2) + (1/r^3) +... (1/r^n)

You will be given two integers n and r

Your task is to calculate the sum S by writing a recursive function

Using iterative approach or formula to calculate the sum can lead to disqualification directly


@@@@ 14 ) Follow The Knight 

You are very good at playing chess since childhood and you knew the rules very much. You have a  10 X 10 chessboard and you want to explore all the possible squares on the board that the knight can be at in exactly N moves.It is placed at (i,j) coordinate initially. For a 10X10 chessboard (1,1) will be the top left corner and (10,10) will be the bottom right corner.

You can refer the following diagram, the knight can move to any of the squares marked as X in 1 move.


@@@@ 15 )  Nick and Hacks 

Tom and Nick are good friends.Once Tom asked Nick exactly N rupees, but Nick has only 1 rupee in his bank account.

Nick wants to help his friend so he wrote two hacks First hack can multiply the amount of money he owns by 10,while the second can multiply
 it by 20. These hacks can be used any number of times.Can Nick help Tom with his hacks?

@@@@16)22april -- The Famous Sum 

You are given two numbers nand k. The number p iscreated by concatenating the string n k times.

we need to find thesuper digit ofthe integer p

We definesuperdigit of an integer pusing the following rules:

If p has only 1 digit, then itssuperdigit is 1.
Otherwise, thesuperdigit of p is equal to thesuperdigit of the sum of the digits of p.

super_digit(P) = super_digit(148148148) 
               = super_digit(1+4+8+1+4+8+1+4+8)
               = super_digit(39)
               = super_digit(3+9)
               = super_digit(12)
               = super_digit(1+2)
               = super_digit(3)
               = 3.




@@@@17) 12april ---que questions

New Year Celebration Ended
Description

New Year Celebration is coming near and DG is hosting a party for it, To make sure the party goes well she wants order in the party.There are two counters one of ice-cream and other for Cold-drinks.

On ice-cream counter the line was formed in form of Queue and on drinks counter the line was formed in order of Stacks.

She gave the management of the party to NV, NV made a plan to ask the manager following types of query.

Query types:

1 X : Number X enter the Queue.

2 X : Number X enter the Stack.

3: Output whoever is in-front of the queue.

4: Output whoever is on-top of the stack

5: Which person is in-front of queue get out of queue and enters the stack.

Note: If the Queue or Stack is empty then output "-1"


@@@@ 18) TWO POINTER :-

You are given two sorted arrays each of length N. Your task is to write a program that merges both the arrays such that the final array formed after merging is sorted.

Note: You must not use sort() function in your entire code


@@@@19)  Masai Coding Competition 

There is a coding Tournament where 4 clubs are going to compete. Since the team selection is very critical in this competition,Rohit asked Harshit to help him in the team selection process.

There is a long queue of students from four clubs. Each student of a club have a different roll number. Whenever a new student will come, he will search for his clubmate from the end of the queue. As soon as he will find any of the club-mate in the queue, he will stand behind him, otherwise he will stand at the end of the queue. At any moment Harshit will ask the student, who is standing in front of the queue, to come and give his name and Harshit will remove him from the queue. There are Q operations of one of the following types:

E a b: A new student of club a whose roll number is b will stand in queue according to the method mentioned above.

D: Harshit will ask the student, who is standing in front of the queue, to come and put his name and Harshit will remove him from the queue


@@@@20) Implement GCD

Implement the GCD Function using recursion. Given two integers a and b, find the greatest common divisor of a and b.

The approach which uses logarithmic time complexity is expected here.

@@@@ 21) Beyond Factorial! 

Given an integer N, you have to find the natural logarithmic value of the given integer's factorial i.e., ln(n!).

You have to print the result up to 4 digits after the decimal point.

Note:- You should not be supposed to do like " finding n! and apply direct inbuilt log on top that ". Instead of that, you can use Math.log() if applicable.Also, you can't use any direct formula or perform the task iteratively - Try achieving the output recursively.

Java Script:https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toFixed




@@@@ 22)SNE Right II 

Andy and Mark are playing a game of arrays.

The game involves finding the smallest neighbor element to the right side for each element in the array



@@@@ 23)
Alan & Christopher -11:37:47
Description

Its the year 1940, and the British along with the Allied forces, are being brutally assaulted on the battle field, by Hitler's Nazi Germany. The Britishers need to crack the secret communication that takes place between the German troops, with the help of their encryption device "Enigma". Alan Turing, the famous Mathematician, is assigned the task, to break the German encryption code, with his computer device "Christopher".

The communication happens in the form of strings, and the strings are organized such that, given a string "S", when fed into a text editor "#" means backspace, on a conventional keyboard. Since, everyday, Britain is getting more behind in the war, Alan asks for your help. Help Alan, break the secret communication between German Troops.



@@@@ 24)Strings with Parenthesis Ended

Given a string containing three types of parenthesis : (), [], {}, write a program to check whether the string contains a valid sequence of parentheses.

@@@@ 25)

Signal's Capacity Ended
Description

There are many signal towers present in Bangalore.Towers are aligned in a straight horizontal line(from left to right) and each tower transmits a signal in the right to left direction.

Tower X shall block the signal of Tower Y if Tower X is present to the left of Tower Y and Tower X is taller than Tower Y. So,the power of a signal of a given tower can be defined as :

{(the number of contiguous towers just to the left of the given tower whose height is less than or equal to the height of the given tower) + 1}.

You need to write a program that finds the power of each tower.


@@@@ 26)
War of Minions Ended
Description

Minions are of 26 types, from 'a' to 'z'. If two Minions of same type finds themselves besides each other, they will kill each other.

You are given a string of Minions. You need to find the final surviving string of Minions, after all the killings. i.e Further No Minion will kill other Minion.

If no Minion survived a after all the fighting, print "-1".


@@@@ 27)

N Queens Variant Ended
Description

The n-queens puzzle is the problem of placing n queens on an n×n chessboard such that no two queens attack each other.

Given an integer n, print the number of distinct solutions to the n-queens puzzle.


@@@@ 28)

Solve it, Provide GUI, Put on resume Ended
Description

Sudoku

Sudoku is one of the most popular puzzle games of all time. The goal of Sudoku is to fill a 9×9 grid with numbers so that each row, column and 3×3
 section contain all of the digits between 1 and 9.

@@@@ 29)

@@@@ 30)

@@@@ 31)

//////////////////////////////////////////////////////////////
Qno 1) 

ans :
function maximumOccuringElement(A,N){
    var dic = {};
    var arr =[] ;
    var count = 0
    for(let num of A){
        if(dic[num]){
            // arr.push(num) ;
            dic[num] += 1 ;
        }
        else{
            dic[num] = 1 ;
            
        }
        
    }
    // var max = Math.max(Object.values(dic))
    console.log(Object.values(dic));
    // console.log(max)
  } 

//////////////////////////////////////////////////////


Qn0 2) 
ans :
var a = [4,3,6,3,4,3]
let counts = {}

 for(let i =0; i < a.length; i++){ 
     if (counts[a[i]]){
     counts[a[i]] += 1
     } else {
     counts[a[i]] = 1
     }
    }  
console.log(counts)
//////////////////////////////////////////////////////////////
Qno3)
ans;
function checkAnagram(arr1,arr2){
    
    var Arr1 = [] ;
    Arr1 = arr1.split("").map(String) ;
    // for(i=0;i<arr1.length; i++){
        
    //     if(arr1[i]!=" "){
    //          Arr1.push(arr1[i])
    //     }
       
    // }
    Arr1.sort() ;
    var Array1 = Arr1.join("").trim() ;
    // Arr1.trim();
    // arr2.sort()
    // console.log(Array1) ;
    // console.log(arr2) ;
    var Arr2 = [];
    Arr2 = arr2.trim().split("").map(String) ;
    // var Array2 = Arr2.join(" ") ;
    // console.log(Array2) ;
    // for(i=0;i<arr2.length;i++){
        
    //     if(arr2[i]!=" "){
    //         Arr2.push(arr2[i]) ;
    //     }
    
        
    // }
    Arr2.sort() ;
    // Arr2.trim() ;
    var Array2 = Arr2.join("").trim() ;
    // console.log(Arr2) ;
    //  console.log(Array2) ;
    
    if(Array1===Array2){
        console.log("True");
    }
    else{
        console.log("False");
    }
}
/////////////////////////////////////////////////////////////////////////////
Qno4)
ans
function canFormPalindrome(str,l)
    {
        
    //   console.log(str,l) ;
    // return str ;
    obj = {} ;
    
    for(i=0;i<l;i++){
        if(obj[str[i]]){
            obj[str[i]] += 1 ;
        }
        else{
            obj[str[i]] = 1 ;
        }
    }
    var counts = (Object.values(obj)) ;
    // console.log(counts);
    var odd = 0 ;
    for(k=0 ;k<counts.length;k++){
        
        if(counts[k]%2!=0){
            odd++ ;
        }
    }
    if(odd>1){
        console.log("No")
    }
    else{
        console.log('Yes')
    }
        
        
   
    }
    //////////////////////////////////////////////////////////////////////////////////////////////////////////

Qno5)
ans:
function countName(arr,n){                                               
    
                                                      /////note/// you can sort the given string if ans is required in sorting ,,,remeber arr can not be sorted first converted it into string using arr1 = arr.join("")

let counts = {}

 for(let i =0; i < n; i++){ 
     if (counts[arr[i]]){
     counts[arr[i]] += 1
     } else {
     counts[arr[i]] = 1
     }
    }  
    // console.log(counts);
 var num = Object.values(counts);
 var name = Object.keys(counts)
//  console.log(num);
//  console.log(name);
  for(h=0;h<num.length;h++)
  {
      console.log(name[h],num[h])
  }
//   console.log(num.join(" "))
    
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Qno6)
ans:
function minMax(arr,n,k){
    
    
    arr.sort(function(a, b){return a-b}) ;
    // console.log(arr);
    var elm = n-k;
    var max = 0;
    var min = 0 ;
    var count =0 ;
    for(i=n-1;i>=k;i--){
        max += arr[i] ; 
      
    }
    // console.log(diff)
     
    // console.log(max);
    for(i=0;i<elm;i++){
        min += arr[i] ;  
    }
    // console.log(min)
    var result = max -min ;
    console.log(result) ;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Qno 7)
ans:
function symmetricOrNot(n, mat) {
    // console.log(checkVertical(mat,n)) ;
    // console.log(checkHorizontal(mat,n)) ;
    if(checkVertical(mat,n) && checkHorizontal(mat,n)){
        console.log("YES") ;
    }
    else{
        console.log("NO") ;
    }
   
}
function checkVertical(mat,n){
    left = 0 ;
    right = n-1 ;
    while(left<right){
        for(i=0;i<n;i++){
        if(mat[i][left] != mat[i][right]){
            return false ;
            
        }
        
    
        }
        right--
        left++
    }
    return true ;
}
function checkHorizontal(mat,n){
    var top = 0 ;
    var bottom = n-1 ;
    while(top<bottom){
    for(i=0;i<n;i++){
         if(mat[top][i]!=mat[bottom][i]){
             return false ;
         }    
    }
     bottom--
    top++
    
    }
    return true ;
}


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


Qno8)
ans:

function spiralTraversal(N, M, arr){
 
 
 var top = 0 ;
 var bottom = N-1; 
 var left =0 ;
 var right= M-1 ;
 var spiral = "" ;
 var count = 0 ;
 
 
 while(count<N*M)
 {
 
 for(i=top; i<=bottom && count<N*M ; i++)
 {
     spiral = spiral + arr[i][left] +" ";
     count++
 }
 left++
 for(i=left; i<=right && count<N*M ; i++)
 {
     spiral = spiral +arr[bottom][i] + " ";
       count++
 }
 bottom--
 for(i=bottom; i>=top && count<N*M; i--)
 {
     spiral = spiral + arr[i][right] +" " ;
       count++
 }
 right--
 for(i=right; i>=left && count<N*M; i--)
 {
     spiral = spiral + arr[top][i]+" " ;
       count++
 }
 top++
 }
 
 console.log(spiral);
//  console.log(count);
 
   
   
  
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Qno9)
ans:
function masaiQuiz(arr,N){
      count = arr[N-1]
    for (i = 0;i<N-1;i++){
        if(arr[i] > arr[i+1]){
           count++ 
        }
    }

    console.log(count)
      
  }  
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Qno 10)
ans :

function findProduct(arr,N){
    
    left = [] ;
    product = 1 ;
    left[0] = 1    
    for(i=1 ; i<N ; i++){
         product = product * arr[i-1]
         left[i] = product 
    }
    // console.log(left) ;
     right = [] ;
    product = 1 ;
    right[N-1] = 1
    for(i=N-2 ; i>=0 ; i--){
         product = product * arr[i+1]
        right[i] = product 
    }
    // console.log(right)
    
    final = []
   
   for(i=0; i<N ;i++){
       final[i] = left[i] *right[i] 
   }
   console.log(final.join(" "))
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Qno 11)
ans ;
method 1 time complexity 0(N square)
function neighbourEle(arr,N){
    
    newArr = ["-1"] ;
    for(let i = 1 ;i<N ;i++){
        
        
        for(j=i-1 ;j>=0 ; j--){
            min = arr[i] ;
            if(min>arr[j]){
                min = arr[j] ;
                break ;
            }
            else{
                min = "-1"
            }
        }
        newArr.push(min)
    }
    console.log(newArr.join(" "))
}

***********************************method 2********************************************

function neighbourEle(arr,N){
    
     ans = []
    
    for(i=0;i<N;i++){
      
        
     
             while(stack.length>0 && stack[stack.length-1]>=arr[i]){
            stack.pop()
        }
        
      if(stack[stack.length-1] < arr[i]){
    //   console.log(stack[stack.length-1],arr[i])
          ans[i] = stack[stack.length-1] ;
      }  
      
      else if(stack.length==0){
          ans[i] = "-1"
      }
      
      stack.push(arr[i])  
    //   console.log(stack)
    }
    console.log(ans.join(" "))
        
        
       
}

\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

Q12)
ans:

function uniqueGift(arr,n){
    que = [] ;
    ans = "" ;
    objCount = {} ;
    
    for(i=0;i<n;i++){
        //every element will enter first in que and the we will check only the front
        que.push(arr[i])
            //   console.log(que)           //create counter for every single element 
        if(objCount[arr[i]]){
            objCount[arr[i]] += 1
        }
        else{
            objCount[arr[i]] = 1 ;
        }
        // console.log(objCount)
        // console.log(que)
        //agar que empty nhi hai aur fron wala element repeat hua h to usse hatayenge
        while(que[0]!= undefined){
            
        
        if(objCount[que[0]] >1){
            // console.log(que)
            que.shift()
        
        }
        else{
            ans += que[0] ;
            // console.log(arr[i])
            break ;
        }
    }
    if(que[0]==undefined){
        ans += "#"
    }
    
        
        
        
    }
    console.log(ans)
}

\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

Q 13 )
ans :  function gP(n,r){
    if(n==0){
        return 1 ;
    }
    
    ans = 1/(r**n) + gP(n-1,r)
    return ans
}


\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
Q 14 )  
ans : function runProgram(input){
    input = input.trim().split(" ").map(Number) ;
    let [i,j,N] = input 
      i= i-1 ;
      j= j-1 ;
    //   console.log(i,j,N)
      grid = [[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],
      [0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],
      [0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0]]
      
      findMoves(i,j,N)
     ans =0;
      for(let i=0;i<=9;i++){
          for(let j=0 ;j<=9;j++){
              ans += grid[i][j];
          }
      }
      console.log(ans)
   
    
}
function findMoves(i,j,N){
    
    if(i>9||j>9||i<0||j<0){
        return
    }
    if(N==0){
        // console.log(i,j)
        grid[i][j] = 1 ;
        return
    }
  
  return ( findMoves(i+2,j+1,N-1),
           findMoves(i+2,j-1,N-1),
           findMoves(i+1,j-2,N-1),
           findMoves(i-1,j-2,N-1),
           findMoves(i+1,j+2,N-1),
           findMoves(i-1,j+2,N-1),
           findMoves(i-2,j+1,N-1),
           findMoves(i-2,j-1,N-1)
           )
}


\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

Q 15 )
ans :
function runProgram(input){
    input = input.trim().split("\n")
    // console.log(input)
    tc = input[0] ;
    line = 1 ;
    curr = 1
    for(let i=0;i<tc;i++){
        exctamt = input[line] 
        ans = findAmount(curr,exctamt) ;
        // console.log(ans)
        if(ans){
            console.log("Yes")
        }
        else{
            console.log("No")
        }
        line++
    }
    
}
function findAmount(curr,amt){
    
    if(curr>amt){
        return false ;
    }
    if(curr==amt){
        return true;
    }
    
    a = findAmount(curr*10,amt) || findAmount(curr*20,amt) 
    return a ;
}

\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
Q 16)
ans:

function runProgram(input){
    [n,k] = input.trim().split(" ")
    
         g =famouSum(n)
        
         g= +(g)* +(k)
     
        g= g.toString()
         final = famouSum(g)
    console.log(final)
   
   
}
function famouSum(p){
    // arrp = p.trim().split("").map(Number)
    if(p.length == 1){
        // return fans = arrp[0] ;
        return p[0]
        
    }
    if(p.length ==0){
        // return fans = arrp[0] ;
        return 0
        
    }
    ans = 0 ;
    for(let m=0;m<p.length ;m++){
        ans +=   
        // console.log(ans)
    }
    ans =  ans.toString()
    // console.log(typeof(ans))
    //  console.log(ans)
    f = famouSum(ans)
    return f
}

\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\


Q no 17) 
ans :
function performOp(op,val){
    
    if(op==1){
        que.push(val)
    }
    else if(op==2){
        stack.push(val)
    }
    else if(op==3){
        if(que.length == 0){
        console.log(-1)
    }else{
        console.log(que[0])
    }
        
    }
     else if(op==4){
         if(stack.length == 0){
        console.log(-1)
    }else{
       console.log(stack[stack.length-1])
    }
         
        
        
    }
     else if(op==5){
        out = que.shift()
        stack.push(out)
    }
    

    
}



\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

Qno 18)
ans --   
function twoSum(arr1,arr2){
    a = 0
    b = 0
    while(a<arr1.length && b<arr1.length){
        
        if(arr1[a]>arr2[b]){
            ans.push(arr2[b])
            b++
        }
        else if(arr1[a]<=arr2[b]){
            ans.push(arr1[a])
            a++
        }
        // else{
        //     a++
        // }
    }
    
    // console.log(a,b)
    while(a<arr1.length){
        ans.push(arr1[a])
        a++
    }
    while(b<arr2.length){
        ans.push(arr2[b])
        b++
    }
    console.log(ans.join(" "))
    
}





\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

Qno 19)
ans -:
function performOp(op,club,no){
   
    if(op=="E"){
         flag = false
       for(x of mainq){
           if(x==club){
              flag=true
             
           }
           
       }
       if(flag==false){
           mainq.push(club)
       }
        if(club==1){
                club1.push(no)
            }
            else if(club==2){
                club2.push(no)
            }
            else if(club==3){
                club3.push(no)
            }
            else if (club==4){
                club4.push(no)
            }
       
       
    }
    else if(op=="D"){
        // club1.shift()
        // console.log(club1)
        
        if(mainq[0]==1){
            console.log(1,club1.shift())
            // console.log(club1)
            if(club1.length==0){
                mainq.shift()
            }
        }
        else if(mainq[0]==2){
            console.log(2,club2.shift())
            if(club2.length==0){
                mainq.shift()
            }
        }
            else if(mainq[0]==3){
            console.log(3,club3.shift())
            if(club3.length==0){
                mainq.shift()
            }
            }
            else if(mainq[0]==4){
            console.log(4,club4.shift())
            if(club4.length==0){
                mainq.shift()
            }
        }
        
        
    }
    // console.log(mainq,club1,club2,club3,club4)
    //,club1,club2,club3,club4
    
}



\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
Qn020)
ans:-
function findGcd(x,y){
    if(y==0){
        return x ;
    }
    t = y ;
    a= x%y;
    // console.log(x,y)
    x=t
    return findGcd(x,a)
}





\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
Qno-21)
ans :-
function runProgram(input){
    a=+(input)
    ans = fact(a)
    // console.log(ans)
    // ans =   Math.log(ans)
    console.log(Number.parseFloat(ans).toFixed(4))
}

function fact(a){
    // if(a==0 || a==1){
    //     return 1
    // }
    // an = a*fact(a-1)
    // return an
    if(a==1){
        return 0 ;
    }
    y = fact(a-1) + Math.log(a)
    return y
}




\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
Qno 22)
ans:- 
function smallerNeiR(arr,n){
    stk = [] ;
    ans = [] ;
    count = 0      ;
    
    for(let i=n-1;i>=0;i--){
        
        while(stk.length>0 && (arr[i] <= stk[stk.length-1]) ){
            
            stk.pop();
            
        }
        if(stk.length>0 &&  (arr[i] > stk[stk.length-1]) ){
            ans.push(stk[stk.length-1])
        }
        else{
            ans.push(-1)
        }
        
        
        stk.push(arr[i])
    }
    // console.log(ans.reverse()) ;
    for(let i=0;i<ans.length;i++){
        if(ans[i]!= -1){
            count++
        }
    }
    console.log(count)
}

 last


\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
Qno-23)
ans:-
function codeHash(str,n){
    stk =[] ;
    // console.log(str)
    for(let i=0 ;i<n ;i++){
      
       if(str[i]=="#"){
           if(stk.length>0){
               stk.pop()
           }
       }
       
       else{
             stk.push(str[i])
             
       }
       
     
       
    }
    console.log(stk.join(""))
   
}



\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
Q 24)
ans :- 
function runProgram(input){
    // console.log(input) ;
    stk =[] ;
    ans = "" ;
    for(let i=0 ;i<input.length ;i++){
        if( input[i]=="(" || input[i]=="{" || input[i]=="[" ){
            stk.push(input[i]) ;
            // console.log(stk)
        }
        else if(input[i]==")" || input[i]=="}" || input[i]=="]" ){
            // console.log(input[i])
            pair = changeSide(input[i])
            // console.log(changeSide("(") )
          if(pair == stk[stk.length-1]){
                stk.pop()
                // console.log("pair ="+stk)
            }
            else{
              return console.log("unbalanced") ;
            }
        }
    }
    // console.log(stk)
    if(stk.length==0){
      console.log("balanced") ;
    }
    else{
      console.log("unbalanced");
    }
    
}



function changeSide(x){
    if(x==")"){
        return "(" ;
        
    }
    else if(x=="}"){
        return "{" ;
    }
    else if(x=="]"){
        return "[" ;
    }
}



\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
Qno 25)
ans :-
function signalCapacity(arr,n){
    stk = [] ;
    indx = [] ;
    
    for(let i=0 ;i<n ;i++){
        
        while(stk.length>0 && arr[i]>= arr[stk[stk.length-1]]){
            stk.pop() ;
        }
        
        if(stk.length ==0){
            indx.push(-1) ;
        }
        else{
            indx.push(stk[stk.length-1])
        }
        
        stk.push(i)
        
        
    }
    // console.log(indx)
    ans = [] ;
    for(let i=0 ;i<indx.length ;i++){
        ans.push( i-indx[i])
    }
    console.log(ans.join(" "))
}


\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

Qno 26)
ans:- 

function minionFight(str,n){
    stk = [] ;
    ans = [] ;
    
    for(let i=0 ;i<n ;i++){
        if(stk.length>0 && stk[stk.length-1]==str[i]){
            stk.pop()
        }
        else if(stk.length==0){
             stk.push(str[i]);
        }
        else{
            
           
            stk.push(str[i]);
        }
        
        
        //   console.log(stk)
        
    }
    
   if(stk.length>0){
       console.log(stk.join(""))
      
   }
   else {
        console.log(-1)
   }
   
}
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

Qno 27)
ans)
function runProgram(input){
 input = +(input) ;
 arr = [];
 for(let p=0 ;p<input;p++){
     arr1 = [];
     for(let q=0 ;q<input;q++){
         arr1.push(0) ;
     }
     arr.push(arr1) ;
    
 }
 row =0 ;
 count = 0;
   nQueen(arr,input,row);
console.log(count) ;
 }
 
 
 function nQueen(arr,n,row){
     if(row==arr.length){
         count++ ;
         return ;
     }
     
     for(let i=0 ;i<n;i++){
         
        //  console.log(arr) ;
        //  check = checkSafe(arr,row,i);
         if(checkSafe(arr,row,i)==true){
             arr[row][i]=1 ;
             nQueen(arr,n,row+1) ;
             arr[row][i] = 0 ;
         }
         
         
     }
 }
 
 
 function checkSafe(arr,row,col){
     //checking from arr[row][col] to upward ;
     for(let j=row-1 ;j>=0 ;j--){
         if(arr[j][col]==1){
             return false ;
         }
     }
     //checking diagolnally upper left ;
     for(let r = row-1, c=col-1 ;r>=0 && c>=0 ;r-- ,c--){
         if(arr[r][c]==1){
             return false  ;
         }
     }
    //  checking diagonally upper right ;
    for(let r = row-1 ,c= col+1 ;r >=0&&c<arr.length;r--,c++){
        if(arr[r][c]==1){
            return false;
        }
    }
    // console.log(true) ;
    return true ;
 }
 
 
 
 
if (process.env.USER === "") {
	runProgram(``);
    
}
else {
	process.stdin.resume();
	process.stdin.setEncoding("ascii");
	let read = "";
	process.stdin.on("data", function (input) { read += input; });
	process.stdin.on("end", function () { read = read.replace(/\n$/, "");
	read = read.replace(/\n$/, "");
	runProgram(read); });
	process.on("SIGINT", function () { read = read.replace(/\n$/, "");
	runProgram(read);
	process.exit(0);
	});
}


\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
Qn0 28)
ans ;
 var count = 0;


// function validSudoku(B, row, col){

//     //base case
//     if(row == 9){
//         count++;
//         for (var i = 0; i < B.length; i++) {
//             var str = "";
//             for (var j = 0; j < B.length; j++) {
//                 str += B[i][j] + ' ';
//             }

//             console.log(str);
//         }

//     //    console.log(B)
//         return;
//     }

//     var nextRow = 0;
//     var nextCol = 0;

//     if( col == 8 ){
//         nextRow = row + 1;
//         nextCol = 0;
//     }else{
//         nextRow = row;
//         nextCol = col + 1;
//     }

//     if( B[row][col] != 0){
//         validSudoku(B, nextRow, nextCol);
//     }else{
//         for(var i = 1; i <= B.length; i++){
//             if(check(B,row,col,i) == true){
//                 B[row][col] = i;
//                 validSudoku(B, nextRow, nextCol);
//                 B[row][col] = 0;

//             }
//         }
//     }


// }


// function check(B,row,col,value){


//     //horizontal check=>

//     for(var j = 0; j < B.length; j++){
//         if( B[row][j] == value){
//             return false;
//         }
//     }

//     //vertical check=>

//     for(var k = 0; k < B.length; k++){
//         if( B[k][col] == value){
//             return false;
//         }
//     }

//     //Box check=>

//     var x = Math.floor(row/3) * 3;
//     var y = Math.floor(col/3) * 3;

//     for(var l = 0; l < 3; l++){
//         for(var m = 0; m < 3; m++){
//             if( B[l + x][m + y] == value){
//                 return false
//             }
//         }
//     }
//     return true;
// }




// function runProgram(input) {
//   var input = input.trim().split("\n");

//     var B = [];
//     var row = 0;
//     var col = 0;

//   for(var i = 0; i < input.length; i++){
//       var arr = input[i].trim().split(" ").map(Number);
       
//       B.push(arr);
//   }
// //    console.log(B);

//   validSudoku(B, row, col);

//   if(count == 0){
      
//       console.log("-1")
//   }
   
//   }
 
// if (process.env.USER === "Moh Shahrukh Khan") {
//   runProgram(``);
// } else {
//   process.stdin.resume();
//   process.stdin.setEncoding("ascii");
//   let read = "";
//   process.stdin.on("data", function (input) {
//     read += input;
//   });
//   process.stdin.on("end", function () {
//     read = read.replace(/\n$/, "");
//     read = read.replace(/\n$/, "");
//     runProgram(read);
//   });
//   process.on("SIGINT", function () {
//     read = read.replace(/\n$/, "");
//     runProgram(read);
//     process.exit(0);
//   });
// }





\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\







\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\





\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\






\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\





\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\




\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\




\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\



\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\



\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\


\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\



\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\






\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\







\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\





\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\






\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\





\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\




\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\




\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\



\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\



\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\


\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\



\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\






\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\







\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\





\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\






\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\





\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\




\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\




\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\



\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\



\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\


\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\




\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\






\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\







\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\





\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\






\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\





\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\




\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\




\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\



\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\



\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\


\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\




\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\






\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\







\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\





\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\






\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\





\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\




\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\




\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\



\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\



\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\


\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\




\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\






\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\







\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\





\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\






\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\





\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\




\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\




\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\



\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\



\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\


\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\




\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\






\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\







\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\





\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\






\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\





\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\




\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\




\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\



\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\



\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\


\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\



\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\






\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\







\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\





\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\






\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\





\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\




\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\




\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\



\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\



\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\


\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\